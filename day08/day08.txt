1. 자바스크립트의 동작 원리
    실행컨텍스트 이해
        - 스코프를 기반으로 식별자(변수)
        - 식별자에 바인딩 값의 관리 방법
        - 호이스팅이 발생하는 이유
        - 클로저 동작방식

2. 동기처리 프로그래밍 방식 vs 비동기 처리 프로그래밍 방식
    - 동기처리 와 비동기 처리
    - 이벤트 루프와 태스크(task) 큐

3. Ajax란 무엇인가?
    - 같이 알아두어야할 JSON, 데이터 포맷을 JSON으로 주고 받을 것
    - xmlHTTPRequest 객체(프로퍼티와 메서드)로 비동기 통신을 함
        - HTTP요청을 전송하는 방법
        - HTTP응답을 처리하는 방법

========================================================================
9월 2일
4. REST API
5. 프로미스, 제너레이터, 
========================================================================

1. 자바스크립트의 동작 원리
    실행컨텍스트 이해
    각 코드영역마다 4가지 실행컨텍스트를 생성한다.
     var 키워드로 선언된 전역변수과 함수 선언문으로 전역함수를 전역객체의 프로퍼티와 메서드로 바인딩하려면 참조를 위해 전역 객체와 연결한다.
     연결된 후 전역코드에 대하여 코드평가가 이루어지고 (문제가 없으면)컨텍스트가 생성된다. 이러한 실행과정을 런타임


    - 전역코드  (global code)
        최상위 스코프이다. 
    - 함수코드  (function code)
    - eval 코드 (빌트 인 전역 함수 eval 함수에 인수로 전달되어 실행되는 코드)
    - 모듈코드  (module 코드) : 모듈내부의 (함수, 클래스)를 제외하고 나머지 코드

    1. 소스코드 작성
    2. 코드 평가 => 코드를 실행하기 위한 준비 (실행 컨텍스를 생성하고 변수, 함수의 선언문만 먼저 실행하여 생성된 변수나 함수식별자를 키로 관리하는 ) 스코프에 등록 
    3. 선언문을 제외한 소스코드가 순차적으로 실행(런타임 실행)

2. 동기처리와 비동기 처리하는함수를 호출하면 함수코드 평가가 되어서 함수 실행컨텍스트가 생성된다.
    생성된 함수 실행 컨텍스트는 실행 컨텍스트에 의해 push 하고 pop 되면서 코드가 실행된다.

    함수의 실행 순서는 실행컨텍스트 스택으로 관리한다.

    자바스크립트 엔진은 단 하나의 실행 컨텍스트 스텍을 갖는다. 
        : 하나의 함수 실행 영역은 하나 밖에 없다. 따라서 동시에 2개 이상의 함수는 실행 할 수 없다.
        : 최상위 실행 컨텍스트가 아닌 나머지 컨텍스트는 대기 task안에서 runtime형태로 실행대기(기차 타기전에 역사에서 기다리기)
         => 자바스크립트 엔진은 하나의 테스크만 실행 가능하다.(single thread)

3. Ajax는 자바스크립트를 사용해서 브라우저가 서버에게 비동기 방식으로 데이터를 요청하고 서버가 응답한 데이터를 수신하여 웹페이지에 동적으로 랜더링하는 프로그래밍 방식

    Ajax는 브라우저에서 제공하는  WEB API인 xmlHTTPRequest 객체를 기반으로 동작한다.
    xmlHTTPRequest 객체는 http 비동기 통신을 위한 메서드와 프로퍼티를 제공한다.

    1. 변경할 부분만 갱신한다. 전체를 손댈 필요 없음
    2. 변경할 필요가 없는 부분은 다시 랜더링 하지 않는다.
    3. 클라이언트와 서버와 비동기동작으로 통신하기 때문에 서버에 요청을 보낸 이후 다른 태스크에 blocking이 발생하지 않는다.-> Non Blocking (비동기)

JSON을 xmlHTTPRequest에 담아서 서버로 보냄
xmlHTTPRequest는 자바스크립트가 사용하는 HTTP 요청 객체 -> WEB API 제공
